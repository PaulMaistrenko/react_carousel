{"version":3,"sources":["ImagesList.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["imagesFromServ","id","path","Carousel","state","transform","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","windowForCarousel","shiftValue","maxShiftValue","length","className","style","width","transition","map","image","src","alt","toString","height","type","onClick","setState","disabled","React","Component","App","setItemWidth","event","currentTarget","value","setFrameSize","setStep","setAnmationDuration","setInfinite","checked","htmlFor","name","defaultValue","onChange","min","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03a560a9.chunk.js","sourcesContent":["export const imagesFromServ = [\n  { id: 1, path: './img/1.png' },\n  { id: 2, path: './img/2.png' },\n  { id: 3, path: './img/3.png' },\n  { id: 4, path: './img/4.png' },\n  { id: 5, path: './img/5.png' },\n  { id: 6, path: './img/6.png' },\n  { id: 7, path: './img/7.png' },\n  { id: 8, path: './img/8.png' },\n  { id: 9, path: './img/9.png' },\n  { id: 10, path: './img/10.png' },\n];\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './Carousel.scss';\n\ninterface Image {\n  id: number;\n  path: string;\n}\n\ntype State = {\n  transform: number;\n};\n\ntype Prop = {\n  images: Image[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport class Carousel extends React.Component <Prop, State> {\n  state = {\n    transform: 0,\n  };\n\n  render() {\n    const { transform } = this.state;\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n    const windowForCarousel = itemWidth * frameSize;\n    const shiftValue = step * itemWidth;\n    const maxShiftValue = -(itemWidth * (images.length - frameSize));\n\n    const toPrev = () => {\n      if (!transform && infinite) {\n        return this.setState({ transform: maxShiftValue });\n      }\n\n      return (this.setState({\n        transform: transform + shiftValue > 0\n          ? 0\n          : transform + shiftValue,\n      }));\n    };\n\n    const toNext = () => {\n      if (transform === maxShiftValue && infinite) {\n        return this.setState({ transform: 0 });\n      }\n\n      return (this.setState({\n        transform: transform - shiftValue < maxShiftValue\n          ? maxShiftValue\n          : transform - shiftValue,\n      }));\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__container\"\n          style={{ width: `${windowForCarousel}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `TranslateX(${transform}px)`,\n              transition: `transform ${animationDuration}ms linear`,\n            }}\n          >\n            {images.map((image) => {\n              return (\n                <li key={image.id} className=\"Carousel__list-item\">\n                  <img\n                    src={image.path}\n                    alt={image.id.toString()}\n                    width={itemWidth}\n                    height={itemWidth}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"button-container\">\n          <button\n            type=\"button\"\n            className=\"button-scrollen prev\"\n            onClick={toPrev}\n            disabled={!transform ? transform === 0 : false}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"button-scrollen next\"\n            data-cy=\"next\"\n            onClick={toNext}\n            disabled={!infinite ? transform === maxShiftValue : false}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { imagesFromServ } from './ImagesList';\nimport { Carousel } from './components/Carousel';\n\ninterface Image {\n  id: number;\n  path: string;\n}\n\ntype State = {\n  images: Image[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    images: imagesFromServ,\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.currentTarget.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.currentTarget.value });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.currentTarget.value });\n  };\n\n  setAnmationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.currentTarget.value });\n  };\n\n  setInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.currentTarget.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"title\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {` ${images.length} `}\n          images\n        </h1>\n        <form className=\"form\">\n          <label htmlFor=\"item-width\">Item width</label>\n          <input\n            type=\"number\"\n            name=\"Item width\"\n            id=\"item-width\"\n            className=\"form-input\"\n            defaultValue={itemWidth}\n            onChange={this.setItemWidth}\n          />\n          <label htmlFor=\"fram-size\">Fram size</label>\n          <input\n            type=\"number\"\n            name=\"Fram size\"\n            id=\"fram-size\"\n            className=\"form-input\"\n            defaultValue={frameSize}\n            min=\"1\"\n            max={images.length}\n            onChange={this.setFrameSize}\n          />\n          <label htmlFor=\"step\">Step</label>\n          <input\n            type=\"number\"\n            name=\"Step\"\n            id=\"step\"\n            className=\"form-input\"\n            defaultValue={step}\n            onChange={this.setStep}\n          />\n          <label htmlFor=\"animation-duration\">Animation duration</label>\n          <input\n            type=\"number\"\n            name=\"Animation duration\"\n            id=\"animation-duration\"\n            className=\"form-input\"\n            defaultValue={animationDuration}\n            max=\"5000\"\n            onChange={this.setAnmationDuration}\n          />\n          <label htmlFor=\"infinite\">Infinite</label>\n          <input\n            type=\"checkbox\"\n            name=\"Infinite\"\n            id=\"infinite\"\n            className=\"checkbox-field\"\n            onChange={this.setInfinite}\n          />\n        </form>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}